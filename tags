!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
.add_coords	R/util.R	/^.add_coords <- function(point_sf, coord_names = c("longitude", "latitude")){$/;"	f
.build_formula	R/prioritize.R	/^.build_formula <- function() {$/;"	f
.get_model	R/prioritize.R	/^.get_model <- function(trees = 2000) {$/;"	f
.get_recipe	R/prioritize.R	/^.get_recipe <- function(data_tb, my_formula) {$/;"	f
.get_workflow	R/prioritize.R	/^.get_workflow <- function(recipe, spec) {$/;"	f
.has_any_value	R/util.R	/^.has_any_value <- function(x) {$/;"	f
.read_data	R/prioritize.R	/^.read_data <- function(raw = FALSE) {$/;"	f
.tune_model	R/prioritize.R	/^.tune_model <- function(workflow, folds, grid = 11) {$/;"	f
area_PA	data-raw/DATASET.R	/^        area_PA             = "Area_PA",$/;"	v
by	data-raw/DATASET.R	/^    dplyr::left_join(constant_tb, by = "id") %>%$/;"	v
by	data-raw/DATASET.R	/^    dplyr::left_join(deforestation_tb, by = c("id", "ref_year")) %>%$/;"	v
constant_tb	data-raw/DATASET.R	/^constant_tb <- tibble::tibble()$/;"	g
constant_vars	data-raw/DATASET.R	/^constant_vars <- col_names_ls %>%$/;"	g
coord_names	R/util.R	/^.add_coords <- function(point_sf, coord_names = c("longitude", "latitude")){$/;"	v
data_file	data-raw/DATASET.R	/^data_file <- ".\/data-raw\/Random_Forest.xlsx"$/;"	g
data_folds	R/prioritize.R	/^        data_folds <- rsample::bootstraps(data_train)$/;"	v
data_folds	R/prioritize.R	/^    data_folds <- rsample::bootstraps(data_train)$/;"	v
data_split	R/prioritize.R	/^        data_split <- rsample::initial_split(data_tb)$/;"	v
data_tb	R/prioritize.R	/^        data_tb <- data_tb %>%$/;"	v
data_tb	R/prioritize.R	/^    data_tb <- .read_data(raw = FALSE)$/;"	v
data_train	R/prioritize.R	/^        data_train <- rsample::training(data_split)$/;"	v
def_1_ly	data-raw/DATASET.R	/^        def_1_ly            = "Desmatamento Ano Anterior (km2)",$/;"	v
def_1_ly	data-raw/DATASET.R	/^       def_1_ly             = "Desmatamento Ano Anterior (km2)",$/;"	v
def_2019	data-raw/DATASET.R	/^        def_2019            = "Desmatamento 2019 (km2)"$/;"	v
def_2020	data-raw/DATASET.R	/^        def_2020            = "Desmatamento 2020 (km2)"$/;"	v
def_2_ly	data-raw/DATASET.R	/^        def_2_ly            = "Desmatamento Acumulado 2 Anos Anteriores (km2)",$/;"	v
def_2_ly	data-raw/DATASET.R	/^       def_2_ly             = "Desmatamento Acumulado 2 Anos Anteriores (km2)",$/;"	v
def_4_ly	data-raw/DATASET.R	/^        def_4_ly            = "Desmatamento Acumulado 4 Anos Anteriores (km2)",$/;"	v
def_4_ly	data-raw/DATASET.R	/^       def_4_ly             = "Desmatamento Acumulado 4 Anos Anteriores (km2)",$/;"	v
deforestation_grid	data-raw/DATASET.R	/^deforestation_grid <- variable_ls %>%$/;"	g
err_desc	data-raw/DATASET.R	/^                             err_desc = sprintf("Duplicated ids in data %s!",$/;"	v
estimate_accuracy	R/prioritize.R	/^estimate_accuracy <- function(out_dir, iterations = 100) {$/;"	f
fake_pred	R/prioritize.R	/^    fake_pred <- stats::predict(final_model, fake_new_data)$/;"	v
file	R/prioritize.R	/^            readr::write_csv(x, file = ".\/results\/new_data_tb.csv")$/;"	v
file	R/prioritize.R	/^            saveRDS(x, file = ".\/results\/new_data_tb.rds")$/;"	v
file_path	R/prioritize.R	/^    value <- file_path <- data <- metric <- .estimate <- .metric <- NULL$/;"	v
fit_model	R/prioritize.R	/^fit_model <- function(out_dir) {$/;"	f
form	R/prioritize.R	/^    form <- stats::as.formula($/;"	v
formula	R/prioritize.R	/^        formula = my_formula,$/;"	v
full.names	R/prioritize.R	/^                   full.names = TRUE) %>%$/;"	v
grid	R/prioritize.R	/^                    grid = grid) %>%$/;"	v
grid_file	data-raw/DATASET.R	/^grid_file <- ".\/data-raw\/Grade_Random_Forest.shp"$/;"	g
importance	R/prioritize.R	/^                            importance = "permutation")$/;"	v
log_def	R/prioritize.R	/^                      log_def = log(def))$/;"	v
metric	R/prioritize.R	/^                                         metric = "rmse")) %>%$/;"	v
my_formula	R/prioritize.R	/^                                     my_formula = .build_formula())$/;"	v
my_formula	R/prioritize.R	/^                                 my_formula = .build_formula())$/;"	v
names_to	data-raw/DATASET.R	/^                       names_to = "ref_year",$/;"	v
ranger_recipe	R/prioritize.R	/^        ranger_recipe <- .get_recipe(data_tb,$/;"	v
ranger_recipe	R/prioritize.R	/^    ranger_recipe <- .get_recipe(data_tb,$/;"	v
ranger_recipe	R/prioritize.R	/^    ranger_recipe <- recipes::recipe($/;"	v
ranger_tune	R/prioritize.R	/^        ranger_tune <- .tune_model(workflow = ranger_workflow,$/;"	v
ranger_tune	R/prioritize.R	/^    ranger_tune <- .tune_model(workflow = ranger_workflow,$/;"	v
raw_tb	R/prioritize.R	/^    raw_tb <- .read_data(raw = TRUE)$/;"	v
sheet_tb	data-raw/DATASET.R	/^    sheet_tb <- data_file %>%$/;"	v
test_performance	R/prioritize.R	/^        test_performance <- data_fit %>%$/;"	v
trees	R/prioritize.R	/^                         trees = trees) %>%$/;"	v
