!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!R	constructor	/function used for making value assigned to the nameattr tag/
!_TAG_FIELD_DESCRIPTION!XML	uri	/uri associated with name prefix/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!R	L,list	/lists explicitly created with `list()'/
!_TAG_KIND_DESCRIPTION!R	c,vector	/vectors explicitly created with `c()'/
!_TAG_KIND_DESCRIPTION!R	d,dataframe	/data frame explicitly created with `data.frame()'/
!_TAG_KIND_DESCRIPTION!R	f,function	/functions/
!_TAG_KIND_DESCRIPTION!R	g,globalVar	/global variables having values other than function()/
!_TAG_KIND_DESCRIPTION!R	l,library	/libraries/
!_TAG_KIND_DESCRIPTION!R	n,nameattr	/names attribtes in vectors, lists, or dataframes/
!_TAG_KIND_DESCRIPTION!R	s,source	/sources/
!_TAG_KIND_DESCRIPTION!R	v,functionVar	/function variables having values other than function()/
!_TAG_KIND_DESCRIPTION!XML	i,id	/id attributes/
!_TAG_KIND_DESCRIPTION!XML	n,nsprefix	/namespace prefixes/
!_TAG_KIND_DESCRIPTION!XML	r,root	/root elements/
!_TAG_KIND_DESCRIPTION!Yaml	a,anchor	/anchors/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	0.0	/current.age/
!_TAG_PARSER_VERSION!R	0.0	/current.age/
!_TAG_PARSER_VERSION!XML	0.0	/current.age/
!_TAG_PARSER_VERSION!Yaml	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/alber/Documents/github/prioritizedeforestationhotspots/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	//
!_TAG_ROLE_DESCRIPTION!R!library	library	/library attached by library function/
!_TAG_ROLE_DESCRIPTION!R!library	require	/library attached by require function/
!_TAG_ROLE_DESCRIPTION!R!source	source	/source loaded by source fucntion/
!_TAG_ROLE_DESCRIPTION!Yaml!anchor	alias	/alias/
"2019"	data-raw/DATASET.R	/^    "2019" = c($/;"	n	list:col_names_ls	constructor:c
"2020"	data-raw/DATASET.R	/^    "2020" = c($/;"	n	list:col_names_ls	constructor:c
"2021"	data-raw/DATASET.R	/^    "2021" = c($/;"	n	list:col_names_ls	constructor:c
"2022"	data-raw/DATASET.R	/^   "2022" = c($/;"	n	list:col_names_ls	constructor:c
"2023"	data-raw/DATASET.R	/^   "2023" = c($/;"	n	list:col_names_ls	constructor:c
.build_formula	R/prioritize.R	/^.build_formula <- function() {$/;"	f
.estimate	R/prioritize.R	/^    value <- file_path <- data <- metric <- .estimate <- .metric <- NULL$/;"	v	function:estimate_accuracy
.get_model	R/prioritize.R	/^.get_model <- function(trees = 2000) {$/;"	f
.get_recipe	R/prioritize.R	/^.get_recipe <- function(data_tb, my_formula) {$/;"	f
.get_workflow	R/prioritize.R	/^.get_workflow <- function(recipe, spec) {$/;"	f
.metric	R/prioritize.R	/^    value <- file_path <- data <- metric <- .estimate <- .metric <- NULL$/;"	v	function:estimate_accuracy
.pred	R/prioritize.R	/^    .pred <- NULL$/;"	v	function:fit_model
.read_data	R/prioritize.R	/^.read_data <- function(raw = FALSE) {$/;"	f
.tune_model	R/prioritize.R	/^.tune_model <- function(workflow, folds, grid = 11) {$/;"	f
Example	README.md	/^## Example$/;"	s	chapter:prioritizedeforestationhotspots
Installation	README.md	/^## Installation$/;"	s	chapter:prioritizedeforestationhotspots
MIT License	LICENSE.md	/^# MIT License$/;"	c
`2019`	data-raw/DATASET.R	/^                  `2019` = def_2019,$/;"	g
`2020`	data-raw/DATASET.R	/^                  `2020` = def_2020) %>%$/;"	g
active_fires_ly	data-raw/DATASET.R	/^        active_fires_ly        = "Focos de Calor Ano Anterior"$/;"	n	nameattr:col_names_ls."2021"
active_fires_ly	data-raw/DATASET.R	/^        active_fires_ly     = "Focos de Calor Ano Anterior",$/;"	n	nameattr:col_names_ls."2019"
active_fires_ly	data-raw/DATASET.R	/^        active_fires_ly     = "Focos de Calor Ano Anterior",$/;"	n	nameattr:col_names_ls."2020"
active_fires_ly	data-raw/DATASET.R	/^       active_fires_ly      = "Focos de Calor Ano Anterior"$/;"	n	nameattr:col_names_ls."2022"
active_fires_ly	data-raw/DATASET.R	/^       active_fires_ly      = "Focos de Calor Ano Anterior"$/;"	n	nameattr:col_names_ls."2023"
aesthetics	R/prioritize.R	/^        vip::vip(aesthetics = list(alpha = 0.8,$/;"	L	function:fit_model
alpha	R/prioritize.R	/^        vip::vip(aesthetics = list(alpha = 0.8,$/;"	n	list:fit_model.aesthetics
anonFunc4262358b0100	data-raw/DATASET.R	/^    (function(x) {$/;"	f
anonFunc6fb20cb70100	R/prioritize.R	/^        (function(x) {$/;"	f	function:estimate_accuracy
anonFunc6fb20cb70200	R/prioritize.R	/^        (function(x) {$/;"	f	function:fit_model
area_PA	data-raw/DATASET.R	/^        area_PA             = "Area_PA",$/;"	n	nameattr:col_names_ls."2019"
area_file	data-raw/DATASET.R	/^area_file <- ".\/data-raw\/Area_Grade.xlsx"$/;"	g
area_km2	data-raw/DATASET.R	/^    dplyr::rename(area_km2 = "Área Grade (km2)")$/;"	g
area_tb	data-raw/DATASET.R	/^    area_file %>%$/;"	g
by	data-raw/DATASET.R	/^        dplyr::full_join(constant_ls[[i]], by = "id")$/;"	g
by	data-raw/DATASET.R	/^    dplyr::left_join(area_tb, by = "id")$/;"	g
by	data-raw/DATASET.R	/^    dplyr::left_join(constant_tb, by = "id") %>%$/;"	g
by	data-raw/DATASET.R	/^    dplyr::left_join(deforestation_tb, by = c("id", "ref_year")) %>%$/;"	c
col_names_ls	data-raw/DATASET.R	/^col_names_ls <- list($/;"	L
constant_ls	data-raw/DATASET.R	/^constant_ls <- list()$/;"	L
constant_tb	data-raw/DATASET.R	/^        constant_tb <- constant_ls[[i]]$/;"	g
constant_tb	data-raw/DATASET.R	/^    constant_tb <- constant_tb %>%$/;"	g
constant_tb	data-raw/DATASET.R	/^constant_tb <- constant_tb %>%$/;"	g
constant_tb	data-raw/DATASET.R	/^constant_tb <- tibble::tibble()$/;"	g
constant_vars	data-raw/DATASET.R	/^constant_vars <- col_names_ls %>%$/;"	g
crossvalidation_tb	R/prioritize.R	/^    crossvalidation_tb <- out_dir %>%$/;"	v	function:estimate_accuracy
crs	data-raw/DATASET.R	/^    sf::st_transform(crs = 4326) %>%$/;"	g
data	R/prioritize.R	/^        data = data_tb$/;"	v	function:.get_recipe
data	R/prioritize.R	/^    value <- file_path <- data <- metric <- .estimate <- .metric <- NULL$/;"	v	function:estimate_accuracy
data_file	data-raw/DATASET.R	/^data_file <- ".\/data-raw\/Random_Forest_v4.xlsx"$/;"	g
data_fit	R/prioritize.R	/^        data_fit <- ranger_workflow %>%$/;"	v	function:estimate_accuracy
data_folds	R/prioritize.R	/^        data_folds <- rsample::bootstraps(data_train)$/;"	v	function:estimate_accuracy
data_folds	R/prioritize.R	/^    data_folds <- rsample::bootstraps(data_train)$/;"	v	function:fit_model
data_split	R/prioritize.R	/^        data_split <- rsample::initial_split(data_tb)$/;"	v	function:estimate_accuracy
data_tb	R/prioritize.R	/^    data_tb <- .read_data(raw = FALSE)$/;"	v	function:estimate_accuracy
data_tb	R/prioritize.R	/^    data_tb <- .read_data(raw = FALSE)$/;"	v	function:fit_model
data_tb	R/prioritize.R	/^    data_tb <- prioritizedeforestationhotspots::deforestation_data %>%$/;"	v	function:.read_data
data_train	R/prioritize.R	/^        data_train <- rsample::training(data_split)$/;"	v	function:estimate_accuracy
data_train	R/prioritize.R	/^    data_train <- data_tb$/;"	v	function:fit_model
def	R/prioritize.R	/^    def <- NULL$/;"	v	function:.read_data
def_1_ly	data-raw/DATASET.R	/^        def_1_ly            = "Desmatamento Ano Anterior (km2)",$/;"	n	nameattr:col_names_ls."2019"
def_1_ly	data-raw/DATASET.R	/^        def_1_ly            = "Desmatamento Ano Anterior (km2)",$/;"	n	nameattr:col_names_ls."2020"
def_1_ly	data-raw/DATASET.R	/^        def_1_ly            = "Desmatamento Ano Anterior (km2)",$/;"	n	nameattr:col_names_ls."2021"
def_1_ly	data-raw/DATASET.R	/^       def_1_ly             = "Desmatamento Ano Anterior (km2)",$/;"	n	nameattr:col_names_ls."2022"
def_1_ly	data-raw/DATASET.R	/^       def_1_ly             = "Desmatamento Ano Anterior (km2)",$/;"	n	nameattr:col_names_ls."2023"
def_2019	data-raw/DATASET.R	/^        def_2019            = "Desmatamento 2019 (km2)"$/;"	n	nameattr:col_names_ls."2019"
def_2020	data-raw/DATASET.R	/^        def_2020            = "Desmatamento 2020 (km2)"$/;"	n	nameattr:col_names_ls."2020"
def_2_ly	data-raw/DATASET.R	/^        def_2_ly            = "Desmatamento Acumulado 2 Anos Anteriores (km2)",$/;"	n	nameattr:col_names_ls."2019"
def_2_ly	data-raw/DATASET.R	/^        def_2_ly            = "Desmatamento Acumulado 2 Anos Anteriores (km2)",$/;"	n	nameattr:col_names_ls."2020"
def_2_ly	data-raw/DATASET.R	/^        def_2_ly            = "Desmatamento Acumulado 2 Anos Anteriores (km2)",$/;"	n	nameattr:col_names_ls."2021"
def_2_ly	data-raw/DATASET.R	/^       def_2_ly             = "Desmatamento Acumulado 2 Anos Anteriores (km2)",$/;"	n	nameattr:col_names_ls."2022"
def_2_ly	data-raw/DATASET.R	/^       def_2_ly             = "Desmatamento Acumulado 2 Anos Anteriores (km2)",$/;"	n	nameattr:col_names_ls."2023"
def_4_ly	data-raw/DATASET.R	/^        def_4_ly            = "Desmatamento Acumulado 4 Anos Anteriores (km2)",$/;"	n	nameattr:col_names_ls."2019"
def_4_ly	data-raw/DATASET.R	/^        def_4_ly            = "Desmatamento Acumulado 4 Anos Anteriores (km2)",$/;"	n	nameattr:col_names_ls."2020"
def_4_ly	data-raw/DATASET.R	/^        def_4_ly            = "Desmatamento Acumulado 4 Anos Anteriores (km2)",$/;"	n	nameattr:col_names_ls."2021"
def_4_ly	data-raw/DATASET.R	/^       def_4_ly             = "Desmatamento Acumulado 4 Anos Anteriores (km2)",$/;"	n	nameattr:col_names_ls."2022"
def_4_ly	data-raw/DATASET.R	/^       def_4_ly             = "Desmatamento Acumulado 4 Anos Anteriores (km2)",$/;"	n	nameattr:col_names_ls."2023"
deforestation_data	data-raw/DATASET.R	/^    variable_ls %>%$/;"	g
deforestation_grid	data-raw/DATASET.R	/^    grid_file %>%$/;"	g
deforestation_tb	data-raw/DATASET.R	/^    constant_tb %>%$/;"	g
dist_1_percent_ly	data-raw/DATASET.R	/^        dist_1_percent_ly   = "Distância a ponto de grade > 1% desmatamentono ano anterior (km)/;"	n	nameattr:col_names_ls."2019"
dist_1_percent_ly	data-raw/DATASET.R	/^        dist_1_percent_ly   = "Distância a ponto de grade > 1% desmatamentono ano anterior (km)/;"	n	nameattr:col_names_ls."2020"
dist_1_percent_ly	data-raw/DATASET.R	/^        dist_1_percent_ly   = "Distância a ponto de grade > 1% desmatamentono ano anterior (km)/;"	n	nameattr:col_names_ls."2021"
dist_1_percent_ly	data-raw/DATASET.R	/^       dist_1_percent_ly    = "Distância a ponto de grade > 1% desmatamentono ano anterior (km)/;"	n	nameattr:col_names_ls."2022"
dist_1_percent_ly	data-raw/DATASET.R	/^       dist_1_percent_ly    = "Distância a ponto de grade > 1% desmatamentono ano anterior (km)/;"	n	nameattr:col_names_ls."2023"
dist_2_percent_ly	data-raw/DATASET.R	/^        dist_2_percent_ly   = "Distância a ponto de grade > 2% desmatamento acumulado em 2 anos/;"	n	nameattr:col_names_ls."2019"
dist_2_percent_ly	data-raw/DATASET.R	/^        dist_2_percent_ly   = "Distância a ponto de grade > 2% desmatamento acumulado em 2 anos/;"	n	nameattr:col_names_ls."2020"
dist_2_percent_ly	data-raw/DATASET.R	/^        dist_2_percent_ly   = "Distância a ponto de grade > 2% desmatamento acumulado em 2 anos/;"	n	nameattr:col_names_ls."2021"
dist_2_percent_ly	data-raw/DATASET.R	/^       dist_2_percent_ly    = "Distância a ponto de grade > 2% desmatamento acumulado em 2 anos/;"	n	nameattr:col_names_ls."2022"
dist_2_percent_ly	data-raw/DATASET.R	/^       dist_2_percent_ly    = "Distância a ponto de grade > 2% desmatamento acumulado em 2 anos/;"	n	nameattr:col_names_ls."2023"
dist_hidro	data-raw/DATASET.R	/^        dist_hidro          = "Distância Hidrovia (km)",$/;"	n	nameattr:col_names_ls."2019"
dist_road	data-raw/DATASET.R	/^        dist_road           = "Distância Rodovia (km)",$/;"	n	nameattr:col_names_ls."2019"
dist_road_hidro	data-raw/DATASET.R	/^        dist_road_hidro     = "Distância Rodovia + Hidrovia (km)",$/;"	n	nameattr:col_names_ls."2019"
estimate_accuracy	R/prioritize.R	/^estimate_accuracy <- function(out_dir, iterations = 100) {$/;"	f
experiment	R/prioritize.R	/^            dplyr::mutate(experiment = i) %>%$/;"	v	function:estimate_accuracy
fake_new_data	R/prioritize.R	/^    fake_new_data <- ranger_recipe %>%$/;"	v	function:fit_model
fake_pred	R/prioritize.R	/^    fake_pred <- stats::predict(final_model, fake_new_data)$/;"	v	function:fit_model
file	R/prioritize.R	/^            readr::write_csv(x, file = file.path(out_dir, "new_data_tb.csv"))$/;"	v	function:fit_model.anonFunc6fb20cb70200
file	R/prioritize.R	/^        readr::write_csv(file = file.path(out_dir, "crossvalidation_tb.csv"))$/;"	v	function:estimate_accuracy
file	R/prioritize.R	/^        readr::write_csv(file = file.path(out_dir, "variable_importance.csv"))$/;"	v	function:fit_model
file_path	R/prioritize.R	/^    value <- file_path <- data <- metric <- .estimate <- .metric <- NULL$/;"	v	function:estimate_accuracy
fill	R/prioritize.R	/^                              fill = "midnightblue"))$/;"	n	list:fit_model.aesthetics
final_model	R/prioritize.R	/^    final_model <- parsnip::fit(ranger_workflow,$/;"	v	function:fit_model
fit_model	R/prioritize.R	/^fit_model <- function(out_dir, seed = 42) {$/;"	f
form	R/prioritize.R	/^    form <- NA$/;"	v	function:.build_formula
formula	R/prioritize.R	/^        formula = my_formula,$/;"	v	function:.get_recipe
grid_file	data-raw/DATASET.R	/^grid_file <- ".\/data-raw\/Grade_Random_Forest.shp"$/;"	g
i	R/prioritize.R	/^    for (i in seq_len(iterations)) {$/;"	v	function:estimate_accuracy
i	data-raw/DATASET.R	/^for (i in seq_along(constant_ls)) {$/;"	g
id	data-raw/DATASET.R	/^        id                  = "ID",$/;"	n	nameattr:col_names_ls."2019"
id	data-raw/DATASET.R	/^        id                  = "ID",$/;"	n	nameattr:col_names_ls."2020"
id	data-raw/DATASET.R	/^        id                  = "ID",$/;"	n	nameattr:col_names_ls."2021"
id	data-raw/DATASET.R	/^       id                   = "ID",$/;"	n	nameattr:col_names_ls."2022"
id	data-raw/DATASET.R	/^       id                   = "ID",$/;"	n	nameattr:col_names_ls."2023"
id	data-raw/DATASET.R	/^    dplyr::select(id = Id) %>%$/;"	g
imp_spec	R/prioritize.R	/^    imp_spec <- ranger_spec %>%$/;"	v	function:fit_model
importance	R/prioritize.R	/^                            importance = "permutation")$/;"	v	function:fit_model
log_def	R/prioritize.R	/^                      log_def = log(def))$/;"	v	function:.read_data
mean	R/prioritize.R	/^        dplyr::summarize(mean = mean(.estimate)) %>%$/;"	v	function:estimate_accuracy
metric	R/prioritize.R	/^        tune::select_best(metric = "rmse")$/;"	v	function:fit_model
metric	R/prioritize.R	/^    value <- file_path <- data <- metric <- .estimate <- .metric <- NULL$/;"	v	function:estimate_accuracy
min_n	R/prioritize.R	/^                         min_n = tune::tune(),$/;"	v	function:.get_model
mode	R/prioritize.R	/^        parsnip::set_mode(mode = "regression") %>%$/;"	v	function:.get_model
mtry	R/prioritize.R	/^    parsnip::rand_forest(mtry = tune::tune(),$/;"	v	function:.get_model
my_sheet	data-raw/DATASET.R	/^for (my_sheet in readxl::excel_sheets(data_file)) {$/;"	g
names_to	data-raw/DATASET.R	/^                       names_to = "ref_year",$/;"	g
new_data_tb	R/prioritize.R	/^    new_data_tb <- raw_tb %>%$/;"	v	function:fit_model
overwrite	data-raw/DATASET.R	/^usethis::use_data(deforestation_data, deforestation_grid, overwrite = TRUE)$/;"	g
param_final	R/prioritize.R	/^        param_final <- ranger_tune %>%$/;"	v	function:estimate_accuracy
param_final	R/prioritize.R	/^    param_final <- ranger_tune %>%$/;"	v	function:fit_model
performance_file	R/prioritize.R	/^        performance_file <- file.path(out_dir,$/;"	v	function:estimate_accuracy
pred_def	R/prioritize.R	/^        dplyr::mutate(pred_def = exp(.pred)) %>%$/;"	v	function:fit_model
prioritizedeforestationhotspots	README.md	/^# prioritizedeforestationhotspots$/;"	c
ranger_recipe	R/prioritize.R	/^        ranger_recipe <- .get_recipe(data_tb,$/;"	v	function:estimate_accuracy
ranger_recipe	R/prioritize.R	/^    ranger_recipe <- .get_recipe(data_tb,$/;"	v	function:fit_model
ranger_recipe	R/prioritize.R	/^    ranger_recipe <- recipes::recipe($/;"	v	function:.get_recipe
ranger_spec	R/prioritize.R	/^        ranger_spec <- .get_model()$/;"	v	function:estimate_accuracy
ranger_spec	R/prioritize.R	/^    ranger_spec <- .get_model()$/;"	v	function:fit_model
ranger_tune	R/prioritize.R	/^        ranger_tune <- .tune_model(workflow = ranger_workflow,$/;"	v	function:estimate_accuracy
ranger_tune	R/prioritize.R	/^    ranger_tune <- .tune_model(workflow = ranger_workflow,$/;"	v	function:fit_model
ranger_workflow	R/prioritize.R	/^        ranger_workflow <- .get_workflow(recipe = ranger_recipe,$/;"	v	function:estimate_accuracy
ranger_workflow	R/prioritize.R	/^    ranger_workflow <- .get_workflow(recipe = ranger_recipe,$/;"	v	function:fit_model
raw_tb	R/prioritize.R	/^    raw_tb <- .read_data(raw = TRUE)$/;"	v	function:fit_model
ref_year	data-raw/DATASET.R	/^        dplyr::mutate(ref_year = my_sheet) %>%$/;"	g
resamples	R/prioritize.R	/^                    resamples = folds,$/;"	v	function:.tune_model
sheet	data-raw/DATASET.R	/^        readxl::read_excel(sheet = my_sheet) %>%$/;"	g
sheet	data-raw/DATASET.R	/^    readxl::read_excel(sheet = "Planilha1") %>%$/;"	g
sheet_tb	data-raw/DATASET.R	/^        data_file %>%$/;"	g
test_performance	R/prioritize.R	/^        test_performance <- data_fit %>%$/;"	v	function:estimate_accuracy
value	R/prioritize.R	/^    value <- file_path <- data <- metric <- .estimate <- .metric <- NULL$/;"	v	function:estimate_accuracy
values_to	data-raw/DATASET.R	/^                       values_to = "def")$/;"	g
variable_ls	data-raw/DATASET.R	/^variable_ls <- list()$/;"	L
workflow_fit	R/prioritize.R	/^    workflow_fit <- workflows::workflow() %>%$/;"	v	function:fit_model
